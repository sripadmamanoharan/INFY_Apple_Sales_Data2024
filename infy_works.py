# -*- coding: utf-8 -*-
"""Infy_works.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YKd86SUl5HvVtJqssIsKHN5w25K3-JAd
"""

pip install pandas streamlit matplotlib plotly google-generativeai langchain

import google.generativeai as genai
import os

# Set Google Gemini API Key
os.environ["GOOGLE_API_KEY"] = "AIzaSyAXClTjGxX7Ot8_heJGcyxAk3CaL-wYs4Q"  # Replace with your actual key
genai.configure(api_key=os.environ["GOOGLE_API_KEY"])

print("‚úÖ Google Gemini API Connected!")

from google.colab import files
uploaded = files.upload()

import pandas as pd

# Load dataset
df = pd.read_csv("apple_sales_2024.csv")
df.dropna(inplace=True)  # Remove missing values
df.rename(columns=lambda x: x.strip(), inplace=True)  # Fix column names
df.head()

kpis = {
    "Total iPhone Sales": df["iPhone Sales (in million units)"].sum(),
    "Total iPad Sales": df["iPad Sales (in million units)"].sum(),
    "Total Mac Sales": df["Mac Sales (in million units)"].sum(),
    "Total Wearables Sales": df["Wearables (in million units)"].sum(),
    "Total Services Revenue": df["Services Revenue (in billion $)"].sum()
}

print("üìä Sales KPIs:", kpis)

import matplotlib.pyplot as plt

# Aggregate data by region
region_sales = df.groupby("Region").sum(numeric_only=True)

# Plot sales distribution
region_sales[['iPhone Sales (in million units)', 'iPad Sales (in million units)',
              'Mac Sales (in million units)', 'Wearables (in million units)']].plot(kind='bar', stacked=True, figsize=(12, 6))

plt.title("Total Sales by Region (in million units)")
plt.ylabel("Sales Volume")
plt.xlabel("Region")
plt.xticks(rotation=45)
plt.show()

!pip install langchain-google-genai

import langchain_google_genai
print("langchain_google_genai installed successfully!")

from langchain_google_genai import ChatGoogleGenerativeAI
from langchain_core.messages import HumanMessage

# Initialize LangChain AI Agent with Google Gemini
llm = ChatGoogleGenerativeAI(model="gemini-pro", google_api_key=os.environ["GOOGLE_API_KEY"])

class InsightAgent:
    def __init__(self, llm):
        self.llm = llm

    def generate_insights(self, kpis):
        prompt = f"""
        Analyze the following sales data: {kpis}.
        Provide key insights, trends, and areas for improvement.
        Suggest strategies to optimize sales performance.
        """
        response = self.llm.invoke([HumanMessage(content=prompt)])
        return response.content

# ‚úÖ Create AI Agent
insight_agent = InsightAgent(llm)

# ‚úÖ Run AI analysis on KPI data
insights = insight_agent.generate_insights(kpis)

print("üîç AI-Generated Sales Insights:\n", insights)

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# 
# st.title("üöÄ AI-Powered Sales Performance Dashboard")
# 
# st.write("### üìä Key Performance Indicators")
# st.json({
#     "Total iPhone Sales": 150,
#     "Total iPad Sales": 120,
#     "Total Mac Sales": 80,
#     "Total Wearables Sales": 60,
#     "Total Services Revenue": 45
# })
# 
# st.write("### ü§ñ AI-Generated Insights")
# st.write("üîç AI suggests increasing marketing in high-performing regions and optimizing inventory in low-performing areas.")
#

from google.colab import files
files.download("app.py")
